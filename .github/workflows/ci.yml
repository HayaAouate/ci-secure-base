name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-scan-push:
    runs-on: ubuntu-latest
    environment: CODE



    steps:
      - name: Checkout code
        run: echo "D√©ploiement vers l‚Äôenvironnement CODE"
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mon-projet:latest .

      - name: Run tests
        run: |
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/mon-projet:latest python -m unittest discover

      - name: Scan avec Trivy (vuln√©rabilit√©s)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/mon-projet:latest
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true

      - name: Scan avec Snyk (d√©pendances & container)
        uses: snyk/actions/docker@master
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/mon-projet:latest
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: üïµÔ∏è‚Äç‚ôÇÔ∏è Scan GitLeaks (secrets dans le code)
        run: |
          docker run --rm -v ${{ github.workspace }}:/code zricethezav/gitleaks:latest detect --source=/code --verbose



      - name: Push vers Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/mon-projet:latest
